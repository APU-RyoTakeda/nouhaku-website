"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@5v%!5xd=3f=!kp2onnflyx8%@$(qy+e9*m#%57rwwzdz@#xcd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 追加したアプリ
    'rest_framework',        # Django REST Framework
    'corsheaders',           # CORS設定用
    'core',                  # 作成した`core`アプリケーション
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'farmstay_db',       # Dockerコマンドで作成したデータベース名
        'USER': 'farmstay_user',     # Dockerコマンドで作成したユーザー名
        'PASSWORD': 'T4keastr0ll', # ★ここを自分で設定したパスワードに置き換える★
        'HOST': 'localhost',         # Dockerコンテナがローカルで動いているため
        'PORT': '5432',              # PostgreSQLのデフォルトポート
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

import os # osモジュールをインポート

# BASE_DIR は既に定義されているはずです

# アップロードされたメディアファイルを保存するディレクトリのパス
# プロジェクトのルートディレクトリ (manage.pyと同じ階層) に 'media' フォルダが作成され、その中に画像が保存されます。
# 例: 'nouhaku-website/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# メディアファイルにアクセスするためのURLプレフィックス
# 例えば、http://127.0.0.1:8000/media/your_image.jpg のようにアクセスできるようになります。
MEDIA_URL = '/media/'

# CORS設定 (settings.pyに既にCORS_ALLOWED_ORIGINSがない場合)
# フロントエンドのポート3000からのアクセスを許可します
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

# (もしMIDDLEWAREに'corsheaders.middleware.CorsMiddleware'がない場合も追加してください)
# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'corsheaders.middleware.CorsMiddleware', # ここに追加
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     # ... 他のミドルウェア ...
# ]
